{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\caleb\\\\Desktop\\\\expense-tracker-react\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\caleb\\\\Desktop\\\\expense-tracker-react\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export default(function(state,action){switch(action.type){case\"GET_TRANSACTIONS\":return _objectSpread({},state,{loading:false,transactions:action.payload});case\"DELETE_TRANSACTION\":return _objectSpread({},state,{transactions:state.transactions.filter(function(transaction){return transaction._id!==action.payload;})});case\"ADD_TRANSACTION\":return _objectSpread({},state,{transactions:[].concat(_toConsumableArray(state.transactions),[action.payload])});case\"TRANSACTION_ERROR\":return _objectSpread({},state,{error:action.payload});default:return state;}});","map":{"version":3,"sources":["C:/Users/caleb/Desktop/expense-tracker-react/client/src/context/AppReducer.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error"],"mappings":"+WAAA,eAAe,SAACA,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,kBAAL,CACE,wBACKF,KADL,EAEEG,OAAO,CAAE,KAFX,CAGEC,YAAY,CAAEH,MAAM,CAACI,OAHvB,GAKF,IAAK,oBAAL,CACE,wBACKL,KADL,EAEEI,YAAY,CAAEJ,KAAK,CAACI,YAAN,CAAmBE,MAAnB,CACZ,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACC,GAAZ,GAAoBP,MAAM,CAACI,OAA5C,EADY,CAFhB,GAMF,IAAK,iBAAL,CACE,wBACKL,KADL,EAEEI,YAAY,8BAAMJ,KAAK,CAACI,YAAZ,GAA0BH,MAAM,CAACI,OAAjC,EAFd,GAIF,IAAK,mBAAL,CACE,wBACKL,KADL,EAEES,KAAK,CAAER,MAAM,CAACI,OAFhB,GAIF,QACE,MAAOL,CAAAA,KAAP,CAzBJ,CA2BD,CA5BD","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TRANSACTIONS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload,\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case \"TRANSACTION_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}